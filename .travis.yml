# CIツール設定ファイル記述の流れ(今回はtravis CIの例)
# 権限の設定
sudo: required

# Dockerを使う
services: docker

# コンテナを起動
before_install:
  - docker-compose up--build -d
# herokuのdocker registryにログイン
  - docker login -u "$HEROKU_USERNAME" -p "$HEROKU_API_KEY" registry.heroku.com

script:
# DB準備
  -docker-compose exec --env 'RAILS_ENV=test' web rails db:create
  -docker-compose exec --env 'RAILS_ENV=test' web rails db:migrate
# テスト実行
  -docker-compose exec --env 'RAILS_ENV=test' web rails test

# デプロイを実行
deploy:
  provider: script
  script:
# ビルドするdocker image(-f Dockerfile名を指定)をタグ付けしてherokuにプッシュ
  docker build -t registry.heroku.com/$HEROKU_APP_NAME/web -f Dockerfile.prod .;
  docker push registry.heroku.com/$HEROKU_APP_NAME/web;
# herokuコマンドDBを作成後、アプリを実行
  heroku run --app $HEROKU_APP_NAME rails db:migrate;

#デプロイはmainブランチにマージされた時だけに限定
on:
  branch:main